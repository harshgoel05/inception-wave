{"version":3,"sources":["ng://jw-bootstrap-switch-ng2/lib/jw-bootstrap-switch-ng2.component.ts","ng://jw-bootstrap-switch-ng2/lib/jw-bootstrap-switch-ng2.module.ts"],"names":["callback","CUSTOM_INPUT","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","JwBootstrapSwitchNg2Component","multi","ngZone","this","EventEmitter","prototype","$on","on","nativeElement","$off","off","$label","label","$container","container","getWrapperClasses","output","baseClass","_wrapperClass","_focused","readonly","_size","_innerState","_animate","disabled","_indeterminate","inverse","getOnClasses","_onColor","getOffClasses","_offColor","getLabelMarginLeft","width","handleWidth","_dragEnd","ngOnChanges","changes","calculateWith","ngAfterViewInit","onClick","setStateValue","onKeyDown","e","which","preventDefault","stopImmediatePropagation","onDragStart","target","_dragStart","stopPropagation","pageX","touches","parseInt","style","marginLeft","onDragMove","difference","Number","onDragEnd","removeDragEnd","state","_innerAnimate","onTouchStart","onMouseDown","onTouchMove","onMouseMove","onMouseUp","onTouchEnd","onMouseLeave","onFocus","onBlur","_onTouchedCallback","disableAnimation","self","setTimeout","_innerHandleWidth","Math","max","offsetWidth","_innerLabelWidth","labelWidth","run","_this","Object","defineProperty","value","offText","labelText","onText","v","_onChangeCallback","changeState","emit","previousValue","currentValue","writeValue","registerOnChange","fn","registerOnTouched","Component","args","selector","providers","template","NgZone","Output","ViewChild","HostListener","Input","JwBootstrapSwitchNg2Module","NgModule","imports","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  AfterViewInit,\n  forwardRef,\n  SimpleChanges,\n  NgZone,\n  EventEmitter,\n  ViewChild,\n  OnChanges\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nconst callback = () => {\n};\n\nconst CUSTOM_INPUT: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => JwBootstrapSwitchNg2Component),\n  multi: true\n};\n\n@Component({\n  selector: 'bSwitch',\n  providers: [CUSTOM_INPUT],\n  template: `\n      <div class=\"{{ getWrapperClasses() }}\" [style.width]=\" (handleWidth  + labelWidth ) +'px'\">\n          <div #container class=\"{{ baseClass }}-container\"\n               [style.width]=\" ((handleWidth * 2) + labelWidth) +'px'\"\n               [style.margin-left]=\"getLabelMarginLeft()\"><!--\n              --><span #on [innerHTML]=\"(inverse) ? offText : onText\"\n                class=\"{{ (inverse) ? getOffClasses() : getOnClasses() }}\"></span><!--\n              --><span #label class=\"{{ baseClass }}-label\">&nbsp;{{ labelText }}</span><!--\n              --><span #off [innerHTML]=\"(inverse) ? onText : offText\"\n                class=\"{{ (inverse) ? getOnClasses() : getOffClasses() }}\"></span><!--\n              --><input type=\"checkbox\" [(ngModel)]=\"value\" [readonly]=\"readonly\" [disabled]=\"disabled\"\n                     (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n          </div>\n      </div>`\n})\n\nexport class JwBootstrapSwitchNg2Component implements AfterViewInit, ControlValueAccessor, OnChanges {\n  // Defining Default Options for Switch\n  public handleWidth: number = 0;\n  public labelWidth: number = 0;\n  public labelText: string = '';\n  public inverse: boolean = false;\n  public baseClass: string = 'bootstrap-switch';\n  public onText: string = 'ON';\n  public offText: string = 'OFF';\n  public disabled: boolean = false;\n  public readonly: boolean = false;\n\n  private _focused: boolean = false;\n  private _size: any = 'normal';\n  private _animate: boolean = true;\n  private _innerAnimate: boolean = true;\n  private _indeterminate: boolean = false;\n  private _onColor: string = 'primary';\n  private _offColor: string = 'default';\n  private _wrapperClass: string = 'wrapper';\n  private _innerState: boolean = false;\n  private _innerHandleWidth: string | number = 'auto';\n  private _innerLabelWidth: string | number = 'auto';\n\n  private _dragStart: any = null;\n  private _dragEnd: any = null;\n\n  private _onTouchedCallback: () => void = callback;\n  private _onChangeCallback: (_: any) => void = callback;\n\n  @Output() changeState: EventEmitter<any> = new EventEmitter<any>();\n\n\n  // Defining DOM Elements\n  @ViewChild('container') container: ElementRef;\n  @ViewChild('on') on: ElementRef;\n  @ViewChild('label') label: ElementRef;\n  @ViewChild('off') off: ElementRef;\n\n  private $on(): any {\n      return this.on.nativeElement;\n  }\n\n  private $off(): any {\n      return this.off.nativeElement;\n  }\n\n  private $label(): any {\n      return this.label.nativeElement;\n  }\n\n  private $container(): any {\n      return this.container.nativeElement;\n  }\n\n  /**\n   * @description:  Function to set the Classes for the Wrapper Div\n   * @returns string\n   */\n  public getWrapperClasses() {\n      let output: string = this.baseClass + ' ' + this.baseClass + '-' + this._wrapperClass;\n\n      if (this._focused) {\n          output += ' ' + this.baseClass + '-focused';\n      }\n      if (this.readonly) {\n          output += ' ' + this.baseClass + '-readonly';\n      }\n\n      if (this._size != null) {\n          output += ' ' + this.baseClass + '-' + this._size;\n      }\n\n      if (this._innerState) {\n          output += ' ' + this.baseClass + '-on';\n      } else {\n          output += ' ' + this.baseClass + '-off';\n      }\n\n      if (this._animate) {\n          output += ' ' + this.baseClass + '-animate';\n      }\n\n      if (this.disabled) {\n          output += ' ' + this.baseClass + '-disabled';\n      }\n\n      if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\n          output += ' ' + this.baseClass + '-indeterminate';\n      }\n\n      if (this.inverse) {\n          output += ' ' + this.baseClass + '-inverse';\n      }\n\n      return output;\n  }\n\n  /**\n   * @description Function to set the css classes for #on\n   * @returns string\n   */\n  public getOnClasses(): string {\n      let output: string = this.baseClass + '-handle-on';\n\n      if (this._onColor) {\n          output += ' ' + this.baseClass + '-' + this._onColor;\n      }\n\n      return output;\n  }\n\n  /**\n   * @description Function to set the css classes for #off\n   * @returns string\n   */\n  public getOffClasses(): string {\n      let output: string = this.baseClass + '-handle-off';\n\n      if (this._offColor) {\n          output += ' ' + this.baseClass + '-' + this._offColor;\n      }\n\n      return output;\n  }\n\n  /**\n   * @description  Function set the marging of the #label when change the state\n   * @returns string\n   */\n  public getLabelMarginLeft(): string {\n      let width = (this.inverse) ? -this.handleWidth : 0;\n      if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\n          width = -(this.handleWidth / 2);\n      } else if (this._dragEnd) {\n          width = this._dragEnd;\n      } else if (!this._innerState) {\n          if (!this.inverse) {\n              width = -this.handleWidth;\n          } else {\n              width = 0;\n          }\n      }\n      return width + 'px';\n  }\n\n  constructor(private ngZone: NgZone) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n      if (changes['setLabelText'] ||\n          changes['setOnText'] ||\n          changes['setHandleWidth'] ||\n          changes['setLabelWidth'] ||\n          changes['setOffText'] ||\n          changes['setSize']) {\n          this.calculateWith(true);\n      }\n  }\n\n  ngAfterViewInit() {\n      this.calculateWith();\n  }\n\n  @HostListener('click') onClick() {\n      if (!this.disabled && !this.readonly && !this._dragEnd) {\n          this.setStateValue(!this._innerState);\n      } else if (this._dragEnd) {\n          this._dragEnd = null;\n      }\n  }\n\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent) {\n      if (!e.which || this.disabled || this.readonly) {\n          return;\n      }\n      switch (e.which) {\n          case 37:\n              e.preventDefault();\n              e.stopImmediatePropagation();\n              this.setStateValue(false);\n              break;\n          case 39:\n              e.preventDefault();\n              e.stopImmediatePropagation();\n              this.setStateValue(true);\n              break;\n\n      }\n  }\n\n  private onDragStart(e: any): void {\n      if (e.target === this.$label()) {\n          if (this._dragStart || this.disabled || this.readonly) {\n              return;\n          }\n          e.preventDefault();\n          e.stopPropagation();\n          this._dragStart = (e.pageX || e.touches[0].pageX) - parseInt(this.$container().style.marginLeft, 10);\n          if (this._animate) {\n              this._animate = !this._animate;\n          }\n      }\n  }\n\n  private onDragMove(e: any): void {\n      if (this._dragStart) {\n          e.preventDefault();\n          const difference = (e.pageX || e.touches[0].pageX) - this._dragStart;\n          if (difference < -Number(this.handleWidth) || difference > 0) {\n              return;\n          }\n          this._dragEnd = difference;\n      }\n  }\n\n  private onDragEnd(e: Event, removeDragEnd: boolean = false) {\n      if (this._dragStart) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (this._dragEnd) {\n              const state = this._dragEnd > -(Number(this.handleWidth) / 2);\n              this.setStateValue((this.inverse) ? !state : state);\n          }\n          this._dragStart = null;\n          if (removeDragEnd) {\n              this._dragEnd = null;\n          }\n          if (this._innerAnimate) {\n              this._animate = true;\n          }\n      }\n  }\n\n  @HostListener('touchstart', ['$event']) onTouchStart(e: any) {\n      this.onDragStart(e);\n  }\n\n  @HostListener('mousedown', ['$event']) onMouseDown(e: any) {\n      this.onDragStart(e);\n  }\n\n  @HostListener('touchmove', ['$event']) onTouchMove(e: any) {\n      this.onDragMove(e);\n  }\n\n  @HostListener('mousemove', ['$event']) onMouseMove(e: any) {\n      this.onDragMove(e);\n  }\n\n  @HostListener('mouseup', ['$event']) onMouseUp(e: Event) {\n      this.onDragEnd(e);\n  }\n\n  @HostListener('touchend', ['$event']) onTouchEnd(e: Event) {\n      this.onDragEnd(e, true);\n  }\n\n  @HostListener('mouseleave', ['$event']) onMouseLeave(e: Event) {\n      this.onDragEnd(e, true);\n  }\n\n  onFocus() {\n      this._focused = true;\n  }\n\n  onBlur() {\n      this._focused = false;\n      this._onTouchedCallback();\n  }\n\n  /**\n   * @description Function to make recalculate the size of the elements when options change\n   * @param disableAnimation\n   */\n  private calculateWith(disableAnimation: boolean = false): void {\n\n      const self = this;\n      if (disableAnimation && this._innerAnimate) {\n          this._animate = false;\n      }\n      setTimeout(() => {\n          self.$on().style.width = 'auto';\n          self.$off().style.width = 'auto';\n          self.$label().style.width = 'auto';\n          const width = (self._innerHandleWidth === 'auto')\n              ? Math.max(self.$on().offsetWidth, self.$off().offsetWidth)\n              : self._innerHandleWidth;\n\n          if (self.$label().offsetWidth < width) {\n              if (self._innerLabelWidth === 'auto') {\n                  self.labelWidth = Number(width);\n              } else {\n                  self.labelWidth = Number(self._innerLabelWidth);\n              }\n          } else {\n              if (self._innerLabelWidth === 'auto') {\n                  self.labelWidth = self.$label().offsetWidth;\n              } else {\n                  self.labelWidth = Number(self._innerLabelWidth);\n              }\n          }\n\n          self.handleWidth = Number(width);\n\n          self.ngZone.run(() => {\n              self.$label().style.width = self.labelWidth + 'px';\n              self.$on().style.width = self.handleWidth + 'px';\n              self.$off().style.width = self.handleWidth + 'px';\n              setTimeout(() => {\n                  if (disableAnimation && this._innerAnimate) {\n                      this._animate = true;\n                  }\n              });\n          });\n      });\n  }\n\n  // Functions to set inputs and the private variables of the Switch\n  @Input('switch-base-class') set setBaseClass(value: string) {\n      this.baseClass = value;\n  }\n\n  @Input('switch-wrapper-class') set setWrapperClass(value: string) {\n      this._wrapperClass = value;\n  }\n\n  @Input('switch-off-text') set setOffText(value: string) {\n      this.offText = (value) ? value : 'OFF';\n  }\n\n  @Input('switch-label-text') set setLabelText(value: string) {\n      this.labelText = value;\n  }\n\n  @Input('switch-on-text') set setOnText(value: string) {\n      this.onText = (value) ? value : 'ON';\n  }\n\n  @Input('switch-size') set setSize(value: string) {\n      if (value) {\n        this._size = value;\n      }\n  }\n\n  @Input('switch-animate') set setAnimate(value: boolean) {\n      this._animate = value;\n      this._innerAnimate = value;\n  }\n\n  @Input('switch-on-color') set setOnColor(value: string) {\n      if (value)  {\n        this._onColor = value;\n      }\n  }\n\n  @Input('switch-off-color') set setOffColor(value: string) {\n      if (value) {\n        this._offColor = value;\n      }\n  }\n\n  @Input('switch-disabled') set setDisabled(value: boolean) {\n      this.disabled = value;\n  }\n\n  @Input('switch-readonly') set setReadOnly(value: boolean) {\n      this.readonly = value;\n  }\n\n  @Input('switch-indeterminate') set setIndeterminate(value: boolean) {\n      this._indeterminate = value;\n  }\n\n  @Input('switch-inverse') set setInverse(value: boolean) {\n      this.inverse = value;\n  }\n\n  @Input('switch-handle-width') set setHandleWidth(value: number | 'auto') {\n      this._innerHandleWidth = (typeof(value) !== 'undefined') ? value : 'auto';\n  }\n\n  @Input('switch-label-width') set setLabelWidth(value: number | 'auto') {\n      this._innerLabelWidth = (typeof(value) !== 'undefined') ? value : 'auto';\n  }\n\n  get value(): boolean {\n      return this._innerState;\n  }\n\n  set value(v: boolean) {\n      if (v === null || typeof v === 'undefined')  {\n        this._indeterminate = true;\n      }\n      this.setStateValue(v);\n  }\n\n  private setStateValue(v: boolean): void {\n      if (v !== this._innerState) {\n\n          this._onChangeCallback(v);\n\n          this.changeState.emit({\n              previousValue: this._innerState,\n              currentValue: v\n          });\n          this._innerState = v;\n      }\n  }\n\n  writeValue(value: boolean) {\n      if (value !== this._innerState) {\n          this._innerState = value;\n      }\n  }\n\n  registerOnChange(fn: any) {\n      this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n      this._onTouchedCallback = fn;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { JwBootstrapSwitchNg2Component } from './jw-bootstrap-switch-ng2.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    FormsModule\n  ],\n  declarations: [JwBootstrapSwitchNg2Component],\n  exports: [JwBootstrapSwitchNg2Component]\n})\nexport class JwBootstrapSwitchNg2Module { }\n"]}